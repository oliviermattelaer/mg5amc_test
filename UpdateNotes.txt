Update notes for MadGraph 5 (in reverse time order)

1.3.5 (14/07/11): JA: New organization of make files, ensure that compilation works 
                      for all modes (with/without LHAPDF, static/dynamic, 
                      regular/gridpack) for both Linux and Mac OS X (be careful with 
                      dynamic libraries on Mac OS X though, since it seems that 
                      common blocks might not work properly)
                  JA: Fixed proper error messages and clean stop for compilation 
                      errors during MadEvent run.

1.3.4 (05/07/11): OM: More informative error message when a compilation error occurs

1.3.3 (29/06/11): JA: Fixed diagram symmetry for case when there are
                      no 3-vertex-only diagrams
                  JA (by OM): More informative error when trying to generate invalid 
                      pythia8 process

1.3.2 (14/06/11): OM: Fix fortran output when a model is case sensitive 
      		      (Bug if a coupling was depending of a case sensitive parameter)
                  SdV: Remove a annoying print in the new cuts (added in 1.3.0)
		  OM: Fix a compilation problem in the standalone cpp output

1.3.1 (02/06/11): JA: Fixed missing file bug with the introduction of
                      inclusive HT cut

1.3.0 (02/06/11): JA: Allow for grouped subprocesses also for MG4 models
                  JA: Improved multiprocess diagram generation to reuse
                      diagrams for crossed processes
                  JA: Automatic optimization of order of particles in
                      multiparticle labels for optimal multiprocess generation
                  JA: Improved efficiency of identification of identical
                      matrix elements
                  JA: Improved identification of diagrams with identical
                      divergency structure for grouped subprocesses
                  JA: Included more fine-grained run options in the
                      run_card, including helicity summation options,
                      whether or not to set ptj and mjj automatically
                      based on xqcut, etc.
                  JA: Fixed some minor array limit and arithmetics warnings
                      for extreme decay and decay chain processes.
                  SdV: Added cuts on H_T(all jets, light and b)
                  OM: Fixed minor bug related to cluster option in launch

1.2.4 (15/05/11): JA: Fixed long-standing bug in DECAY relating to
                      the cross section info in <init> block, and
                      fixed parameter reading for MG5 SM model.

1.2.3 (11/05/11): JA: Fixed problem with scale choice in processes with mixed 
                      QED/QCD orders, e.g. p p > t t~ QED=2. Note that this fix
                      doesn't work for p p > t t~ j j QED=4 which should still
                      be avoided.
		  JA: Added the ptllmin/max options in the default run_card.dat

1.2.2 (09/05/11): OM: fix ALOHA symmetries creating not gauge invariant result 
                      for scalar octet

1.2.1 (08/05/11): OM: reduce the quantity of RAM use by matrix.f
      	          OM: support speed of psyco if this python module is installed
                  OM: fix a minor bug in the model parsing
                  OM: add the check of valid model.pkl also for v4 model
                  OM: add a check that UpdatesNotes is up-to-date when
                      making a release
                  JA: Fixed problem in phase space generation for
                      s-channel mass > s_tot

1.2.0 (05/05/11): OM: minor fixes on check charge conjugation
                  OM: add a check on the path for the validity of the model.pkl
                  JA: Fixed problem with combine_runs on certain compilers

1.1.2 (03/05/11): OM+JA: Fixed problem for models with multiple
                      interactions for the same set of particles,
                      introduced in v. 1.1.1
 
1.1.1 (02/05/11): JA: Replaced (slow) diagram symmetry determination by
                      evaluation with fast identification based on diagram tags.
                  JA: Replacing the "p=-p" id=0 vertex produced by diagram 
                      generation algorithm already in the diagram generation,
                      simplifying drawing, helas objects and color.
                  JA: Fixed compiler warnings for unary operator.
                  JA: Always set all coupling orders for diagrams
                      (needed for NLO implementations).
                  OM: Improved and more elegant "open" implementation for
                      the user interface.
                  OM: minor fixes related to checking the gauge

1.1.0 (21/04/11): JA: Removed hard limit on number of external particles in 
                      MadEvent, allowing for unlimited length decay chains there
                      (up to 14 final state particles successfully integrated).
                  JA: Improved helicity selection and automatic full helicity 
                      sum if needed. Optimization of run parameters.
                  JA: New flag in run_card.dat to decide whether basic cuts
                      are applied to decay products or not.
                  OM: Merged ALOHA calls for different lorentz structures 
                      with the same color structures, increasing the speed and 
                      efficiency of matrix element evaluations.
                  OM: Added new "open" command in command line interface,
                      allowing to open standard file types directly.
                      Automatically open crossx.html at launch.
                  JA: Fixed MadEvent bugs for multiparton processes with 
                      conflicting decays and some faulty array limits.
                  JA: Suppressed scary but irrelevant warnings for compiling 
                      2->1 and 1->2 processes in MadEvent.
                  JA: Pythia 8 output further optimized.
                  JA, OM: Several minor fixes relating to user interface etc.

1.0.0 (12/04/11): Official release of MadGraph 5. Some of the features:
                  - Complete FeynRules compatibility through the UFO interface
                  - Automatic writing of HELAS routines for any model in
                    Fortran, C++ or Python through ALOHA
                  - Matrix element output in Fortran, C++ or Python
                  - Output formats: MadEvent, Pythia 8, Standalone (Fortran/C++)
                  - Support for spin 0, 1/2, 1, 2 particles
                  - Support for color 1, 3, 6, 8
                  - Revamped MadEvent with improved subprocess directory 
                    organization and vastly increased speed and stability
                  - Unlimited length decay chains (up to 12 final state
                    particles tested with MadEvent, see v. 1.0.1)
                  - Process checks for new model implementations
                  - ...and much more (see paper "MadGraph 5: Going Beyond")

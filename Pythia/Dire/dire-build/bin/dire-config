#!/usr/bin/env bash
# dire-config is a part of the DIRE parton shower.
# Copyright (C) 2017 Stefan Prestel
# Author: Stefan Prestel (heavily relying on the PYTHIA pythia8-config script
# by Philip Ilten)
# Configuration tool for the PYTHIA event generator library. Eaxmple usage is:
#     ./dire-config --cxxflags --ldflags --pythia8
# For help please use:
#     ./dire-config --help
# which will print a full list of options.

################################################################################
# VARIABLES: Global variables not defined via command line arguments.
#     CFG_FILE: The Makefile configuration file.
#     USAGE:    Text printed when the --help option is passed.
################################################################################
CFG_FILE=/home/prestel/work/fermi2017/PY8meetsMG5aMC/Pythia/Dire/dire-src/../dire-build/share/Dire/examples/Makefile.inc
read -d "" USAGE << "BLOCKTEXT"
Usage: ./dire-config [OPTIONS]

Configuration tool for the PYTHIA event generator library. The available 
options are defined below. All available options (without arguments) for the 
PYTHIA configuration script are also valid for this script. See 
"./configuration --help" in the top PYTHIA 8 directory for more details. 

Available options.
--help       : Print this help message (also -h, --h, and -help).
--config     : Print the argument(s) used to configure Dire.
--prefix     : Installation prefix (cf. autoconf). Note that if the installation
               is spread over multiple directories, the binary directory with
               the trailing "bin" removed is then returned.
--bindir     : PYTHIA binary directory (equivalent to --prefix-bin).
--libdir     : PYTHIA library directory (equivalent to --prefix-lib).
--includedir : PYTHIA header directory (equivalent to --prefix-include).
--datadir    : PYTHIA share directory (equivalent to --prefix-share).
--xmldoc     : PYTHIA xmldoc directory.
--cxxflags   : Returns the PYTHIA -I flag string needed for compilation.
--cflags     : Equivalent to --cxxflags.
--ldflags    : Returns the PYTHIA -L/-l flag string needed for compilation.
--libs       : Equivalent to --ldflags.
--pythia8    : PYTHIA installation.
BLOCKTEXT

################################################################################
# MAIN: The main execution of the script.
################################################################################

# Check if help requested.
for VAR in "$@"; do
    if [ "$VAR" = "-h" ] || [ "$VAR" = "--h" ] || [ "$VAR" = "-help" ] \
	|| [ "$VAR" = "--help" ]; then echo "$USAGE"; exit; fi; done

# Read the configuration (use local version first, then installed version).
PREFIX=$(cd "$(dirname "${BASH_SOURCE[0]}")"; cd ../; pwd)
if [ -f $PREFIX/Makefile.inc ]; then CFG_FILE="$PREFIX/Makefile.inc"
elif [ ! -f $CFG_FILE ]; then
    echo "Error: cannot find valid configuration for Dire"; exit; fi

while read LINE; do
    if [[ $LINE == \#\ --* ]]; then CONFIG+=${LINE#?}; fi
    if [[ $LINE != *=* ]]; then continue; fi
    VAR=${LINE%=*}; VAL=${LINE#$KEY}; VAL=${VAL#*=};
    eval $VAR=\"$VAL\";
done < $CFG_FILE

# Check if configuration is requested.
for VAR in "$@"; do
    if [ "$VAR" = "--config" ]; then echo "./configure$CONFIG"; exit; fi; done

# Change the prefixes if local version.
if [ "$CFG_FILE" = "$PREFIX/Makefile.inc" ]; then
    PREFIX_BIN="$PREFIX/bin"; PREFIX_INCLUDE="$PREFIX/include"
    PREFIX_LIB="$PREFIX/lib"; PREFIX_SHARE="$PREFIX/share/Dire"; fi

# Parse the arguments.
for VAR in "$@"; do
    if [[ $VAR != --* ]]; then continue; fi
    VAR=$(echo ${VAR#--} | awk '{print toupper($0)}'); VAR=${VAR//"-"/"_"}

    # Handle the equivalent arguments.
    if   [ "$VAR" = "BINDIR" ];     then VAR="PREFIX_BIN"
    elif [ "$VAR" = "LIBDIR" ];     then VAR="PREFIX_LIB"
    elif [ "$VAR" = "INCLUDEDIR" ]; then VAR="PREFIX_INCLUDE"
    elif [ "$VAR" = "DATADIR" ];    then VAR="PREFIX_SHARE"
    elif [ "$VAR" = "XMLDOC" ];     then VAR="PREFIX_SHARE/xmldoc"
    elif [ "$VAR" = "LIBS" ];       then VAR="LDFLAGS"
    elif [ "$VAR" = "CFLAGS" ];     then VAR="CXXFLAGS"
    elif [ "$VAR" = "HEPMC" ];      then VAR="HEPMC2"; fi
    
    # All "--with" arguments.
    if [[ $VAR = WITH_* ]]; then
	VAR=${VAR#WITH_}; eval VAL=\$${VAR}_USE
	if [ -z "$VAL" ]; then eval OUT=\"$OUT \$$VAR\" 
	else OUT="$OUT $VAL"; fi;
    # All "--prefix" arguments.
    elif [[ $VAR = PREFIX* ]]; then eval OUT=\"$OUT \$$VAR\"
    # Flag arguments.
    elif [ "$VAR" = "CXXFLAGS" ]; then OUT="$OUT -I$PREFIX_INCLUDE"
    elif [ "$VAR" = "LDFLAGS" ]; then 
	OUT="$OUT -L$PREFIX_LIB"
	if [ "$GZIP_USE" = "true" ]; then 
	    OUT="$OUT -L$BOOST_LIB -lboost_iostreams -L$GZIP_LIB -lz"; fi
    # Package arguments.
    elif [ "$VAR" = "PYTHIA8" ]; then
        #OUT="$OUT -I$PYTHIA8_INCLUDE $CXX_COMMON -O2 -ansi -pedantic -W -Wall -Wshadow -fPIC"
        OUT="$OUT -I$PYTHIA8_INCLUDE"
    # All remaining arguments.
    else eval OUT=\"$OUT \$$VAR\"; fi; done

# Print the output.
echo $OUT
